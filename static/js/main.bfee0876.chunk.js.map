{"version":3,"sources":["App.js","reportWebVitals.js","i18n.js","index.js"],"names":["Root","styled","switchUnstyledClasses","disabled","track","thumb","focusVisible","checked","input","App","useTranslation","t","i18n","useState","isType","setIsType","x","setX","y","setY","className","FormControlLabel","control","SwitchUnstyled","component","sx","m","onChange","e","target","defaultChecked","label","TextField","type","value","parseFloat","toFixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","use","LanguageDetector","initReactI18next","init","resources","ja","translation","ko","fallbackLng","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAUMA,EAAOC,YAAO,OAAPA,CAAH,8hCASJC,IAAsBC,SAKrBD,IAAsBE,MAStBF,IAAsBG,MAYvBH,IAAsBI,aAAiBJ,IAAsBG,MAK7DH,IAAsBK,QACrBL,IAAsBG,MAMtBH,IAAsBE,MAKtBF,IAAsBM,OA+BdC,MAlBf,WACE,MAAkBC,cAAXC,EAAP,EAAOA,EACP,GADA,EAAUC,KACkBC,oBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkBF,mBAAS,GAA3B,mBAAOG,EAAP,KAAUC,EAAV,KACA,EAAkBJ,mBAAS,GAA3B,mBAAOK,EAAP,KAAUC,EAAV,KAEA,OACE,sBAAKC,UAAU,MAAf,UACE,6BAAKT,EAAE,qBACP,cAACU,EAAA,EAAD,CAAkBC,QAAS,cAACC,EAAA,EAAD,CAAgBC,UAAWxB,EAAMyB,GAAI,CAAEC,EAAG,GAAKnB,QAASO,EAAQa,SAAU,SAACC,GAAOb,EAAUa,EAAEC,OAAOtB,UAAWuB,gBAAc,IAAKC,MAAOpB,EAAE,2BAGvK,sCAAS,cAACqB,EAAA,EAAD,CAAWD,MAAOpB,EAAE,0CAAasB,KAAM,SAAUC,MAAOlB,EAAGW,SAAU,SAACC,GAAOX,EAAKW,EAAEC,OAAOK,UAApG,QAAkHpB,EAAS,MAAQ,OAAnI,OAA4I,cAACkB,EAAA,EAAD,CAAWD,MAAOpB,EAAE,mBAAUsB,KAAM,SAAWC,MAAOhB,EAAGS,SAAU,SAACC,GAAOT,EAAKS,EAAEC,OAAOK,UAArO,eACA,oCAAQ,IAAMC,WAAWnB,KAAOF,EAAS,IAAM,MAAQqB,WAAWjB,GAAM,KAAOkB,QAAQ,UC5E9EC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,8BCiBd1B,IACKkC,IAAIC,KACJD,IAAIE,KACJC,KAAK,CACFC,UAvBU,CACdC,GAAI,CACAC,YAAa,CACT,kBAAS,iBACT,yCAAY,6CACZ,kBAAS,iBACT,wBAAe,oCAGvBC,GAAI,CACAD,YAAa,CACT,kBAAS,kBACT,yCAAY,yCACZ,kBAAS,kBACT,wBAAe,2BAUnBE,YAAa,OAGN1C,EAAf,ECzBA2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BtB,M","file":"static/js/main.bfee0876.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {useTranslation} from \"react-i18next\";\n\n\nimport { styled } from '@mui/system';\nimport SwitchUnstyled, { switchUnstyledClasses } from '@mui/core/SwitchUnstyled';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport TextField from '@mui/material/TextField';\n\nconst Root = styled('span')`\n  font-size: 0;\n  position: relative;\n  display: inline-block;\n  width: 32px;\n  height: 20px;\n  margin: 10px;\n  cursor: pointer;\n\n  &.${switchUnstyledClasses.disabled} {\n    opacity: 0.4;\n    cursor: not-allowed;\n  }\n\n  & .${switchUnstyledClasses.track} {\n    background: #b3c3d3;\n    border-radius: 10px;\n    display: block;\n    height: 100%;\n    width: 100%;\n    position: absolute;\n  }\n\n  & .${switchUnstyledClasses.thumb} {\n    display: block;\n    width: 14px;\n    height: 14px;\n    top: 3px;\n    left: 3px;\n    border-radius: 16px;\n    background-color: #fff;\n    position: relative;\n    transition: all 200ms ease;\n  }\n\n  &.${switchUnstyledClasses.focusVisible} .${switchUnstyledClasses.thumb} {\n    background-color: rgba(255, 255, 255, 1);\n    box-shadow: 0 0 1px 8px rgba(0, 0, 0, 0.25);\n  }\n\n  &.${switchUnstyledClasses.checked} {\n    .${switchUnstyledClasses.thumb} {\n      left: 14px;\n      top: 3px;\n      background-color: #fff;\n    }\n\n    .${switchUnstyledClasses.track} {\n      background: #007fff;\n    }\n  }\n\n  & .${switchUnstyledClasses.input} {\n    cursor: inherit;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    opacity: 0;\n    z-index: 1;\n    margin: 0;\n  }\n`;\n\nfunction App() {\n  const {t, i18n} = useTranslation();\n  const [isType, setIsType] = useState(true);\n  const [x, setX] = useState(0);\n  const [y, setY] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <h1>{t('BP 계산')}</h1>\n      <FormControlLabel control={<SwitchUnstyled component={Root} sx={{ m: 1 }} checked={isType} onChange={(e) => {setIsType(e.target.checked)}} defaultChecked />} label={t(\"1.25 또는 1.2\")} />\n      \n\n      <p>(199+{<TextField label={t('대전 상대 레벨')} type={\"number\"} value={x} onChange={(e) => {setX(e.target.value)}}/>})×{isType ? '1.2' : '1.25'}×{<TextField label={t('OD 수치')} type={\"number\"}  value={y} onChange={(e) => {setY(e.target.value)}}/>}÷60000</p>\n      <p>={(((199 + parseFloat(x)) * (isType ? 1.2 : 1.25) * parseFloat(y)) / 60000).toFixed(4)}</p>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport XHR from \"i18next-http-backend\";\r\n\r\nconst resources = {\r\n    ja: {\r\n        translation: {\r\n            \"BP 계산\": \"BP計算\",\r\n            \"대전 상대 레벨\": \"対戦相手レベル\",\r\n            \"OD 수치\": \"OD数値\",\r\n            \"1.25 또는 1.2\": \"1.25もしくは1.2\",\r\n        }\r\n    },\r\n    ko: {\r\n        translation: {\r\n            \"BP 계산\": \"BP 계산\",\r\n            \"대전 상대 레벨\": \"대전 상대 레벨\",\r\n            \"OD 수치\": \"OD 수치\",\r\n            \"1.25 또는 1.2\": \"1.25 또는 1.2\",\r\n        }\r\n    },\r\n};\r\n\r\ni18n\r\n    .use(LanguageDetector)\r\n    .use(initReactI18next)\r\n    .init({\r\n        resources,\r\n        fallbackLng: 'ko',\r\n    });\r\n\r\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./i18n\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}